/*! HTML5 Boilerplate v6.1.0 | MIT License | https://html5boilerplate.com/ */

/*
 * What follows is the result of much research on cross-browser styling.
 * Credit left inline and big thanks to Nicolas Gallagher, Jonathan Neal,
 * Kroc Camen, and the H5BP dev community and team.
 */

/* ==========================================================================
   Base styles: opinionated defaults
   ========================================================================== */

html {
    color: #222;
    font-size: 1em;
    line-height: 1.4;
}

/*
 * Remove text-shadow in selection highlight:
 * https://twitter.com/miketaylr/status/12228805301
 *
 * Vendor-prefixed and regular ::selection selectors cannot be combined:
 * https://stackoverflow.com/a/16982510/7133471
 *
 * Customize the background color to match your design.
 */

::-moz-selection {
    background: #b3d4fc;
    text-shadow: none;
}

::selection {
    background: #b3d4fc;
    text-shadow: none;
}

/*
 * A better looking default horizontal rule
 */

hr {
    display: block;
    height: 1px;
    border: 0;
    border-top: 1px solid #ccc;
    margin: 1em 0;
    padding: 0;
}

/*
 * Remove the gap between audio, canvas, iframes,
 * images, videos and the bottom of their containers:
 * https://github.com/h5bp/html5-boilerplate/issues/440
 */

audio,
canvas,
iframe,
img,
svg,
video {
    vertical-align: middle;
}

/*
 * Remove default fieldset styles.
 */

fieldset {
    border: 0;
    margin: 0;
    padding: 0;
}

/*
 * Allow only vertical resizing of textareas.
 */

textarea {
    resize: vertical;
}

/* ==========================================================================
   Browser Upgrade Prompt
   ========================================================================== */

.browserupgrade {
    margin: 0.2em 0;
    background: #ccc;
    color: #000;
    padding: 0.2em 0;
}

/* ==========================================================================
   Helper classes
   ========================================================================== */

/*
 * Hide visually and from screen readers
 */

.hidden {
    display: none !important;
}

/*
 * Hide only visually, but have it available for screen readers:
 * https://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 *
 * 1. For long content, line feeds are not interpreted as spaces and small width
 *    causes content to wrap 1 word per line:
 *    https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
 */

.visuallyhidden {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
    white-space: nowrap; /* 1 */
}

/*
 * Extends the .visuallyhidden class to allow the element
 * to be focusable when navigated to via the keyboard:
 * https://www.drupal.org/node/897638
 */

.visuallyhidden.focusable:active,
.visuallyhidden.focusable:focus {
    clip: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    position: static;
    width: auto;
    white-space: inherit;
}

/*
 * Hide visually and from screen readers, but maintain layout
 */

.invisible {
    visibility: hidden;
}

/*
 * Clearfix: contain floats
 *
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that receive the `clearfix` class.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */

.clearfix:before,
.clearfix:after {
    content: " "; /* 1 */
    display: table; /* 2 */
}

.clearfix:after {
    clear: both;
}



html, body {

  position: relative;

  width: 100%;
  min-width: 100%;

  height: 100%;
  min-height: 100%;

  padding: 0;
  margin: 0;

  cursor: default;
  overflow: hidden;
}


body {
  background: linear-gradient(180deg, #22c55e, #3b82f6, #ef4444, #eab308);
  background-size: 250% 250%;
  animation: backgroundflow 10s ease infinite;
}

@keyframes backgroundflow {
  0%{background-position:50% 0%}
  50%{background-position:50% 100%}
  100%{background-position:50% 0%}
}

* {
  user-select: none;
  pointer-events: none;
}

.logos-layer, .happy-layer {

  width: 100%;
  margin-bottom: 1.6vw;
  overflow: hidden;

}

.logos, .happy {

  display: inline-block;

  position: fixed;

  max-width: 600px;

  max-height: 100vh;
  padding-bottom: 16vw;
  margin-bottom: -16vw;


  //filter: invert(1);
}

.logos {
  bottom: 20px;
  left: 20px;

  animation: blinkerlogos 3s linear infinite;
}

@keyframes blinkerlogos {
  50% {
    opacity: .1;
  }
}

.happy {
  bottom: 20px;
  right: 20px;

  animation: blinkerhappy 2s linear infinite;
}

@keyframes blinkerhappy {
  50% {
    opacity: .1;
  }
}




#canvas {
  z-index: 1;
  /* make the canvas wrapper fits the window */
  position: fixed;
  top: 50%;
  left: 50%;

  width: 120%;
  height: 120vh;

  transform: translate(-50%, -50%);

  filter: blur(10px);

  animation: blinkercanvas 5s linear infinite;

  //display: none;

}

@keyframes blinkercanvas {
  50% {
    opacity: .4;
    filter: blur(25px);
  }
}

.plane {
  /* define the size of your plane */
  position: fixed;
  top: 50%;
  left: 50%;

  width: 120%;
  height: 100vh;

  transform: translate(-50%, -50%);
}

.plane img {
  /* hide the img element */
  position: fixed;
  top: 50%;
  left: 50%;

  width: 100%;
  height: 120vh;

  transform: translate(-50%, -50%);

  filter: blur(8px);

  animation: blinkercanvas 5s linear infinite;

  display: none;
}

/*** in case of error show the image ***/

.no-curtains .plane img {
  display: block;
}

